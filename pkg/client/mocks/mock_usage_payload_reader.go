// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/reporting-client/pkg/client (interfaces: UsagePayloadReader)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsagePayloadReader is a mock of UsagePayloadReader interface
type MockUsagePayloadReader struct {
	ctrl     *gomock.Controller
	recorder *MockUsagePayloadReaderMockRecorder
}

// MockUsagePayloadReaderMockRecorder is the mock recorder for MockUsagePayloadReader
type MockUsagePayloadReaderMockRecorder struct {
	mock *MockUsagePayloadReader
}

// NewMockUsagePayloadReader creates a new mock instance
func NewMockUsagePayloadReader(ctrl *gomock.Controller) *MockUsagePayloadReader {
	mock := &MockUsagePayloadReader{ctrl: ctrl}
	mock.recorder = &MockUsagePayloadReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUsagePayloadReader) EXPECT() *MockUsagePayloadReaderMockRecorder {
	return m.recorder
}

// GetPayload mocks base method
func (m *MockUsagePayloadReader) GetPayload() (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPayload")
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPayload indicates an expected call of GetPayload
func (mr *MockUsagePayloadReaderMockRecorder) GetPayload() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPayload", reflect.TypeOf((*MockUsagePayloadReader)(nil).GetPayload))
}
